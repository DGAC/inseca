/*********************************************************************************
 * Theme Name: MACOS-MAJAVE-BOOT-SPLASH-PORT-DARK-1X                             *
 * Version: 1.0                                                                  *
 * Description: Port of the original macOS Mojave boot screen for Plymouth.      *
 * Modified by the inseca authors.                                               *
 * Author: DUKE93                                                                *
 * Date: 12.08.2023                                                              *
 * License: This program is free software: you can redistribute it and/or modify *
 * it under the terms of the GNU General Public License as published by          *
 * the Free Software Foundation, either version 3 of the License, or             *
 * (at your option) any later version.                                           *
 *                                                                               *
 * This program is distributed in the hope that it will be useful,               *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                 *
 * GNU General Public License for more details.                                  *
 *                                                                               *
 * You should have received a copy of the GNU General Public License             *
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.         *
 *********************************************************************************/

Window.SetBackgroundTopColor(0, 0, 0);
Window.SetBackgroundBottomColor(1, 1, 1);
     
boot_x = Window.GetWidth() / 2;
boot_y = Window.GetHeight() / 2;

logo = Image("logo.png");
logo.x = boot_x - logo.GetWidth() / 2 ;
logo.y = boot_y * 0.75;
logo_sprite = Sprite(logo);
logo_sprite.SetPosition(logo.x, logo.y, 2);

SpriteImage = fun(asset) {
    local.sprite = Sprite();
    sprite.image = Image(asset);
    sprite.width = sprite.image.GetWidth();
    sprite.height = sprite.image.GetHeight();
    sprite.SetImage(sprite.image);
    return sprite | global.SpriteImage;
} | Sprite;

SpriteImage.SetSpriteImage = fun(image) {
    this.image = image;
    this.width = image.GetWidth();
    this.height = image.GetHeight();
    this.SetImage(this.image);
};
Spinner = fun() {
    spinner = global.Spinner | [];
    spinner.count = 240;
    spinner.current_idx = 0;
    spinner.last_time = 0;
    spinner.steps = 10.0; // We render degrees in increments of 10 to save disk.
    spinner.duration = 1.0; // Seconds per rotation.
    for (i = 0; i <= spinner.count; ++i) {
        if (i % spinner.steps != 0) {
            continue;
        }
        spinner[i] = SpriteImage("SpinnerRegular-" + i + ".png");
        spinner[i].x = boot_x - spinner[i].width / 2;
        spinner[i].y = boot_y * 1.1;
        spinner[i].SetPosition(spinner[i].x, spinner[i].y, 9);
        spinner[i].SetOpacity(0);
    }
    return spinner;
} | [];

Spinner.Animate = fun(time) {
    degrees = Math.Int(((2 * Math.Pi / duration) * time) * (180 / Math.Pi));
    new = degrees % count;
    old = current_idx;
    if (Math.Int(new) < Math.Int((old + steps) % count)) {
        return;
    }
    new = Math.Int(new / steps) * steps;
    this[old].SetOpacity(0);
    this[new].SetOpacity(1);
    current_idx = new;
    return this;
};

Spinner.GetY = fun() {
    return this[0].GetY();
};

Spinner.GetHeight = fun() {
    return this[0].height;
};

spin = Spinner();

fun boot_progress_cb(time, progress) {
  spin.Animate(time);
}

Plymouth.SetBootProgressFunction(boot_progress_cb);

